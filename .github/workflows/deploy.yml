name: Deploy Application

on:
  workflow_call:
    secrets:
      SSH_USERNAME:
        required: true
      SSH_PRIVATE_KEY:
        required: true
      EMAIL:
        required: true
      CF_DNS_API_TOKEN:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ vars.DOCKER_IMAGE }}
          path: .

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_rsa
          chmod 600 ~/.ssh/deploy_rsa

      - name: Transfer Docker image
        run: |
          scp -i ~/.ssh/deploy_rsa -P ${{ vars.SSH_PORT }} -o StrictHostKeyChecking=no ${{ vars.DOCKER_IMAGE }}.tar ${{ secrets.SSH_USERNAME }}@${{ vars.SSH_HOST }}:/home/${{ secrets.SSH_USERNAME }}/
          scp -i ~/.ssh/deploy_rsa -P ${{ vars.SSH_PORT }} -o StrictHostKeyChecking=no docker/stack.yml ${{ secrets.SSH_USERNAME }}@${{ vars.SSH_HOST }}:/home/${{ secrets.SSH_USERNAME }}/

      - name: Deploy application
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ vars.SSH_HOST }}
          port: ${{ vars.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail

            echo "::group::Loading Docker image"
            docker load -i "${{ vars.DOCKER_IMAGE }}.tar" || {
              echo "::error::Failed to load Docker image"
              exit 1
            }
            echo "::endgroup::"

            echo "::group::Removing old stack"
            if docker stack ls | grep -q prod; then
              docker stack rm prod || {
                echo "::warning::Failed to remove stack, trying service removal"
                docker service ls --filter "label=com.docker.stack.namespace=prod" -q | xargs -r docker service rm
              }
              
              # Wait for complete removal
              timeout 30 bash -c "while docker service ls --filter 'label=com.docker.stack.namespace=prod' -q | grep -q .; do sleep 1; done" || \
                echo "::warning::Some services still removing"
            else
              echo "Stack 'prod' not found"
            fi
            echo "::endgroup::"

            echo "::group::Stack deployment"
            docker stack deploy -c stack.yml prod || {
              echo "::error::Deployment failed"
              docker service ls
              exit 1
            }
